[ORG 0x00]              ; 코드의 시작 어드레스를 0x00으로 설정
[BITS 16]               ; 이하의 코드는 16비트 코드로 설정

SECTION .text           ; text 섹션(세그먼트)을 정의

jmp 0x1000:START        ; CS 세그먼트 레지스터에 0x1000을 복사하면서, START 레이블로 이동

SECTORCOUNT:            dw  0x0000  ; 현재 실행 중인 섹터 번호를 저장

START:
    mov ax, cs                  ; CS 세그먼트 레지스터의 값을 AX 레지스터에 설정
    mov ds, ax                  ; AX 레지스터의 값을 DS 세그먼트 레지스터에 설정
    mov ax, 0xB800              ; 비디오 메모리 어드레스인 0x0B8000을 세그먼트 레지스터 값으로 변환
    mov es, ax                  ; ES 세그먼트 레지스터에 설정
    
    mov ax, 2                   ; 한 문자를 나타내는 바이트 수(2)를 AX 레지스터에 설정
    mul word [ SECTORCOUNT ]            ; AX 레지스터와 섹터 수를 곱함
    mov si, ax                          ; 곱한 결과를 SI 레지스터에 설정
    mov byte [ es: si + ( 160 * 2 ) ], '0'      ; 계산된 결과를 비디오 메모리에
                                                ; 오프셋으로 삼아 세 번째 라인부터 화면에 0을 출력
    add word [ SECTORCOUNT ], 1                 ; 섹터 수를 1 증가
    
    jmp $                               ; 현재 위치에서 무한 루프 수행

    times 512 - ( $ - $$ ) db 0x00      ; $: 현재 라인의 어드레스
                                        ; $$: 현재 섹션(.text)의 시작 어드레스
                                        ; $ - $$: 현재 섹션을 기준으로 하는 오프셋; 512 - ( $ - $$ ): 현재부터 어드레스 512까지
                                        ; db 0x00: 1바이트를 선언하고 값은 0x00
                                        ; time: 반복 수행
                                        ; 현재 위치에서 어드레스 512까지 0x00으로 채움